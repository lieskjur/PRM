&ACCESS RVO
DEF Init ( )
; pocatek systemu je v pravem dolnim rohu

; P1 - pozice nad kostkou v zasobniku (meni se)
; P2 - pozice bezpecna mezi zasobnikem a pracovni plochou (meni se z souradnice)
; P3 - pozice nad mistem kam chci umistit kostku (meni se)

BAS(#INITMOV, 0);
BAS(#BASE, 3); sou. sys.
BAS(#TOOL, 12); nastroj
BAS(#vel_cp, 1); rychlost

;--------------------------------
; parametricke vstupy:
;--------------------------------
; stavime kytku v pozicich:
leg_x_base = 10
leg_y_base = 10

; kolik je stonkovych dilu:
stalk = 3

;--------------------------------
; konstanty:
;--------------------------------
; odstup:
safe = 50
very_safe = 100

; roztece
x_pitch = 16
y_pitch = 16
z_pitch = 19.1

;--------------------------------
; inicializace
;--------------------------------
; prepocet na milimetry
x_base = leg_x_base * x_pitch
y_base = leg_y_base * y_pitch

; bezpecna vyska nad dalsi kostkou
P3.Z = safe

; inicializace bezpecne pozice
P2.X = x_base
P2.Y = y_base + very_safe
P2.Z = P3.Z

; bezpecna vyska nad zasobnikem
P1.Z = safe

PTP XHOME

;--------------------------------
; zakladna
;--------------------------------

P1.X = 13 * x_pitch
P1.Y = 12 * y_pitch

P3.X = x_base
P3.Y = y_base

BuildStep()

;--------------------------------
; stonek
;--------------------------------

IF stalk >= 1 THEN
	P1.X = 13 * x_pitch
	P1.Y = 16 * y_pitch

	P3.X = x_base
	P3.Y = y_base
	P3.Z = P3.Z + z_pitch

	BuildStep()
ENDIF

IF stalk >= 2 THEN
	P1.X = 11 * x_pitch
	P1.Y = 16 * y_pitch

	P3.X = x_base
	P3.Y = y_base
	P3.Z = P3.Z + z_pitch

	BuildStep()
ENDIF

IF stalk >= 3 THEN
	P1.X = 8 * x_pitch
	P1.Y = 16 * y_pitch

	P3.X = x_base
	P3.Y = y_base
	P3.Z = P3.Z + z_pitch

	BuildStep()
ENDIF

IF stalk >= 4 THEN
	P1.X = 6 * x_pitch
	P1.Y = 16 * y_pitch

	P3.X = x_base
	P3.Y = y_base
	P3.Z = P3.Z + z_pitch

	BuildStep()
ENDIF

;--------------------------------
; kvet
;--------------------------------

P1.X = 13 * x_pitch
P1.Y = 15 * y_pitch

P3.X = x_base
P3.Y = y_base
P3.Z = P3.Z + z_pitch

BuildStep()

P1.X = 13 * x_pitch
P1.Y = 17 * y_pitch

P3.X = x_base + 1 * x_pitch
P3.Y = y_base
P3.Z = P3.Z + z_pitch

BuildStep()

P1.X = 13 * x_pitch
P1.Y = 17 * y_pitch

P3.X = x_base - 1 * x_pitch
P3.Y = y_base

BuildStep()

END

;--------------------------------
; DEFINICE SUBPROGRAMU
;--------------------------------

DEF BuildStep ( )
P2.Z = P3.Z
PTP P1
OpenGrip()
LIN_REL {Z -safe}
CloseGrip()
LIN_REL {Z safe}
PTP P2
PTP P3
LIN_REL {Z -safe}
OpenGrip()
LIN_REL {Z safe}
PTP P2
END

DEF OpenGrip ( )
$OUT[8] = FALSE
$OUT[7] = TRUE
wait sec 0.5
END

DEF CloseGrip ( )
$OUT[8] = TRUE
$OUT[7] = FALSE
wait sec 0.5
END


